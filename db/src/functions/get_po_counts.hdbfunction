FUNCTION "get_po_counts" ( im_fdate DATE )
RETURNS TABLE (
        EMPLOYEEID NVARCHAR(10),
	    FULLNAME NVARCHAR(256),
	    LOGINNAME NVARCHAR(12),
	    CREATE_CNT INTEGER,
	    CHANGE_CNT INTEGER,
	    COMBINED_CNT INTEGER)  
AS 
BEGIN 
    /*****************************
        Write your function logic
    ****************************/
EX_PO_CREATE_CNT = SELECT COUNT(*) AS CREATE_CNT, "HISTORY.CREATEDBY.EMPLOYEEID" AS EID
     FROM "PO.Header" WHERE PURCHASEORDERID IN (
                     SELECT PURCHASEORDERID
                        FROM "PO.Item"
                        WHERE "PRODUCT.PRODUCTID" IS NOT NULL)
                        AND MONTH("HISTORY.CREATEDAT") = MONTH(:im_fdate)
GROUP BY  "HISTORY.CREATEDBY.EMPLOYEEID";

EX_PO_CHANGE_CNT = SELECT COUNT(*) AS CHANGE_CNT, "HISTORY.CHANGEDBY.EMPLOYEEID" AS EID
     FROM "PO.Header"  WHERE PURCHASEORDERID IN (
                     SELECT PURCHASEORDERID
                        FROM "PO.Item"
                        WHERE "PRODUCT.PRODUCTID" IS NOT NULL)
                        AND MONTH("HISTORY.CHANGEDAT") = MONTH(:im_fdate)
GROUP BY  "HISTORY.CHANGEDBY.EMPLOYEEID";

EMP_PO_COMBINED_CNT =
        SELECT EMPLOYEEID, "get_full_name"( "NAME.FIRST", "NAME.MIDDLE", "NAME.LAST") as FULLNAME, 
        emp.LOGINNAME, 
        crcnt.CREATE_CNT, 
        chcnt.CHANGE_CNT,  
        crcnt.CREATE_CNT + chcnt.CHANGE_CNT AS COMBINED_CNT
            FROM "MD.Employees" as emp
            LEFT OUTER JOIN :EX_PO_CREATE_CNT AS crcnt
                ON emp.EMPLOYEEID = crcnt.EID
            LEFT OUTER JOIN :EX_PO_CHANGE_CNT AS chcnt
                ON emp.EMPLOYEEID = chcnt.EID;
        --  ORDER BY COMBINED_CNT DESC LIMIT 3;    
        
    RETURN SELECT * FROM :EMP_PO_COMBINED_CNT; 
    
END;